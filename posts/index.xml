<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Semidigital Meta Adventures</title>
    <link>https://zignig.github.io/posts/</link>
    <description>Recent content in Posts on Semidigital Meta Adventures</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 22 Apr 2019 11:24:57 +0800</lastBuildDate>
    
	<atom:link href="https://zignig.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Steve.2</title>
      <link>https://zignig.github.io/posts/steve_part_2/</link>
      <pubDate>Mon, 22 Apr 2019 11:24:57 +0800</pubDate>
      
      <guid>https://zignig.github.io/posts/steve_part_2/</guid>
      <description>Neatness I have finished moving the ardino across to the perfboard , apart for an unexpected short it is working.
Now for compass integration and rewriting the software to have much more nuanced control. I will need to break out the current probes on the motor controller to get the drive chopping properly.</description>
    </item>
    
    <item>
      <title>Steve</title>
      <link>https://zignig.github.io/posts/steve/</link>
      <pubDate>Mon, 22 Apr 2019 08:02:39 +0800</pubDate>
      
      <guid>https://zignig.github.io/posts/steve/</guid>
      <description>&lt;p&gt;STEVE is brake steer rover.&lt;/p&gt;

&lt;p&gt;It is based on the Tamiya tracked chassis.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FPGA</title>
      <link>https://zignig.github.io/posts/fpga/</link>
      <pubDate>Fri, 19 Apr 2019 08:55:07 +0800</pubDate>
      
      <guid>https://zignig.github.io/posts/fpga/</guid>
      <description>&lt;h1 id=&#34;fpga-fun&#34;&gt;FPGA fun&lt;/h1&gt;

&lt;p&gt;I recently aquired a TinyFpgaBX and have been investigating programming RTL.&lt;/p&gt;

&lt;p&gt;After doing regular programming , thinking in gateware is a brain melter.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cqparts work</title>
      <link>https://zignig.github.io/posts/cqparts-work/</link>
      <pubDate>Fri, 19 Apr 2019 08:14:03 +0800</pubDate>
      
      <guid>https://zignig.github.io/posts/cqparts-work/</guid>
      <description>Build tangible programmatic designs in python. It is similar in form to OpenScad where you can define 3d objects with code, however it is python and brings all the power of OO to building objects. You can make paramteric object that are an assembly of parts, this is one of my examples for a little project box

It can also generate gltf format files and display them with ThreeJS</description>
    </item>
    
  </channel>
</rss>