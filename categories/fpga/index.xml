<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fpga on Semidigital Meta Adventures</title>
    <link>https://zignig.github.io/categories/fpga/</link>
    <description>Recent content in Fpga on Semidigital Meta Adventures</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 19 Apr 2019 08:55:07 +0800</lastBuildDate>
    
	<atom:link href="https://zignig.github.io/categories/fpga/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FPGA</title>
      <link>https://zignig.github.io/posts/fpga/</link>
      <pubDate>Fri, 19 Apr 2019 08:55:07 +0800</pubDate>
      
      <guid>https://zignig.github.io/posts/fpga/</guid>
      <description>FPGA fun I recently aquired a TinyFpgaBX and have been investigating programming RTL.
After doing regular programming , thinking in gateware is a brain melter.
TinyFPGA-BX Is a nifty little breadboard friendly board (website), this board has been designed by Luke Valenty and is a great little board to get started with FPGA programming.
Building reconfigurable logic Historically the tooling needed to program FPGA has been vendor specific, the software has been huge, buggy, not portable and a usually windows only.</description>
    </item>
    
  </channel>
</rss>