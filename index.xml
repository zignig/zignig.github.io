<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Semidigital Meta Adventures</title>
    <link>https://zignig.github.io/</link>
    <description>Recent content on Semidigital Meta Adventures</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 19 Apr 2019 09:02:39 +0800</lastBuildDate>
    
	<atom:link href="https://zignig.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Steve</title>
      <link>https://zignig.github.io/posts/steve/</link>
      <pubDate>Fri, 19 Apr 2019 09:02:39 +0800</pubDate>
      
      <guid>https://zignig.github.io/posts/steve/</guid>
      <description>STEVE is brake steer rover.
He is based on the Tamiya tracked chassis. The plan is to get the arduino to drive the H-bridges and then the main controler is going to be a TinyFPGA-BX. I have a number of sensors to attach, but first thing first.</description>
    </item>
    
    <item>
      <title>FPGA</title>
      <link>https://zignig.github.io/posts/fpga/</link>
      <pubDate>Fri, 19 Apr 2019 08:55:07 +0800</pubDate>
      
      <guid>https://zignig.github.io/posts/fpga/</guid>
      <description>FPGA fun I recently aquired a TinyFpgaBX and have been investigating programming RTL logic. After doing regular programming , thinking in gateware is a brain melter.
TinyFPGA-BX Is a nifty little breadboard friendly board (website)</description>
    </item>
    
    <item>
      <title>Cqparts work</title>
      <link>https://zignig.github.io/posts/cqparts-work/</link>
      <pubDate>Fri, 19 Apr 2019 08:14:03 +0800</pubDate>
      
      <guid>https://zignig.github.io/posts/cqparts-work/</guid>
      <description>Build tangible programmatic designs in python. It is similar in form to OpenScad where you can define 3d objects with code, however it is python and brings all the power of OO to building objects. You can make paramteric object that are an assembly of parts, this is one of my examples for a little project box

It can also generate gltf format files and display them with ThreeJS</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zignig.github.io/thing/showcase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zignig.github.io/thing/showcase/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>